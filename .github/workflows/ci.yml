name: ci
on:
  push: { branches: ["**"] }
  pull_request:
  schedule:
    # Weekly security audit (Monday 03:00 UTC)
    - cron: "0 3 * * 1"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install -e .[dev]
      - run: ruff check .
      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          webhook-url: ${{ secrets.SLACK_CI_WEBHOOK_URL }} # Secret for CI failure alerts
          payload: >-
            {"text": ":rotating_light: lint job failed for ${{ github.repository }} • <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Open run>"}

  type:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install -e .[dev]
      - run: mypy src
      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          webhook-url: ${{ secrets.SLACK_CI_WEBHOOK_URL }} # Secret for CI failure alerts
          payload: >-
            {"text": ":rotating_light: type job failed for ${{ github.repository }} • <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Open run>"}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install dependencies
        run: pip install -e .[dev]
      - run: pytest -q
      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          webhook-url: ${{ secrets.SLACK_CI_WEBHOOK_URL }} # Secret for CI failure alerts
          payload: >-
            {"text": ":rotating_light: test job failed for ${{ github.repository }} • <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Open run>"}

  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        language:
          - "python"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          webhook-url: ${{ secrets.SLACK_CI_WEBHOOK_URL }} # Secret for CI failure alerts
          payload: >-
            {"text": ":rotating_light: codeql job failed for ${{ github.repository }} • <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Open run>"}

  pip-audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Upgrade pip
        run: python -m pip install -U pip
      - run: pip install pip-audit
      - run: pip-audit
